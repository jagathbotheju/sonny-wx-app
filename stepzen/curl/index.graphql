type Daily {
  time: [Date]
  weathercode: [Int]
}
type DailyUnits {
  time: String
  weathercode: String
}
type Hourly {
  temperature_2m: [Float]
  time: [DateTime]
}
type HourlyUnits {
  temperature_2m: String
  time: String
}
type Root {
  daily: Daily
  daily_units: DailyUnits
  elevation: Int
  generationtime_ms: Float
  hourly: Hourly
  hourly_units: HourlyUnits
  latitude: Float
  longitude: Float
  timezone: String
  timezone_abbreviation: String
  utc_offset_seconds: Int
}

type Query {
  myQuery(
    apparent_temperature: String
    apparent_temperature_max: String
    apparent_temperature_min: String
    daily: String
    dewpoint_2m: String
    hourly: String
    latitude: String
    longitude: String
    precipitation_probability: String
    rain: String
    relativehumidity_2m: String
    showers: String
    sunrise: String
    sunset: String
    temperature_2m_max: String
    temperature_2m_min: String
    timezone: String
    uv_index_clear_sky_max: String
    uv_index_max: String
  ): Root @rest(endpoint: "https://api.open-meteo.com/v1/forecast")
}
